//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/12/12 - 23:26:43
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="temporalpacient"/> and <see cref="temporalpacientDto"/>.
    /// </summary>
    public static partial class temporalpacientAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="temporalpacientDto"/> converted from <see cref="temporalpacient"/>.</param>
        static partial void OnDTO(this temporalpacient entity, temporalpacientDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="temporalpacient"/> converted from <see cref="temporalpacientDto"/>.</param>
        static partial void OnEntity(this temporalpacientDto dto, temporalpacient entity);

        /// <summary>
        /// Converts this instance of <see cref="temporalpacientDto"/> to an instance of <see cref="temporalpacient"/>.
        /// </summary>
        /// <param name="dto"><see cref="temporalpacientDto"/> to convert.</param>
        public static temporalpacient ToEntity(this temporalpacientDto dto)
        {
            if (dto == null) return null;

            var entity = new temporalpacient();

            entity.HC = dto.HC;
            entity.DNI = dto.DNI;
            entity.Apellidos = dto.Apellidos;
            entity.Nombres = dto.Nombres;
            entity.edad = dto.edad;
            entity.sexo = dto.sexo;
            entity.distrito = dto.distrito;
            entity.direccion = dto.direccion;
            entity.telefono = dto.telefono;
            entity.celular = dto.celular;
            entity.estadocivil = dto.estadocivil;
            entity.gradoinst = dto.gradoinst;
            entity.email = dto.email;
            entity.ocupacion = dto.ocupacion;
            entity.i_IsDeleted = dto.i_IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="temporalpacient"/> to an instance of <see cref="temporalpacientDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="temporalpacient"/> to convert.</param>
        public static temporalpacientDto ToDTO(this temporalpacient entity)
        {
            if (entity == null) return null;

            var dto = new temporalpacientDto();

            dto.HC = entity.HC;
            dto.DNI = entity.DNI;
            dto.Apellidos = entity.Apellidos;
            dto.Nombres = entity.Nombres;
            dto.edad = entity.edad;
            dto.sexo = entity.sexo;
            dto.distrito = entity.distrito;
            dto.direccion = entity.direccion;
            dto.telefono = entity.telefono;
            dto.celular = entity.celular;
            dto.estadocivil = entity.estadocivil;
            dto.gradoinst = entity.gradoinst;
            dto.email = entity.email;
            dto.ocupacion = entity.ocupacion;
            dto.i_IsDeleted = entity.i_IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="temporalpacientDto"/> to an instance of <see cref="temporalpacient"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<temporalpacient> ToEntities(this IEnumerable<temporalpacientDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="temporalpacient"/> to an instance of <see cref="temporalpacientDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<temporalpacientDto> ToDTOs(this IEnumerable<temporalpacient> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
